<?xml version="1.0" encoding="UTF-8"?>
<ISUI>
	<template name='Information.Font'>
		<Name>Segoe</Name>
		<Size>18</Size>
		<Color>FFFFFFFF</Color>
	</template>

	<window name='Tehbot_CombatMissions'>
		<Visible>1</Visible>
		<BackGroundColor></BackGroundColor>
		<Border>0</Border>
		<X>200</X>
		<Y>300</Y>
		<Width>1200</Width>
		<Height>800</Height>
		<TitleBar>
			<Width>100%</Width>
			<Height>40</Height>
			<Border>0</Border>
			<BackgroundColor>FF000000</BackgroundColor>
			<Children>
				<Text name='CombatMissions_TitleBar_Title'>
					<X>0</X>
					<Y>6</Y>
					<Width>100%</Width>
					<Height>40</Height>
					<Alignment>Center</Alignment>
					<Text>Mission Configuration</Text>
				</Text>
				<button	Name='Close'>
					<X>r80</X>
					<Y>0</Y>
					<Width>80</Width>
					<Height>40</Height>
					<Text>Close</Text>
					<OnLeftClick>
						ui -unload "&filepath;/Mission"
					</OnLeftClick>
				</button>
				<button	Name='Halt'>
					<Font template='Button.Font' />
					<BackgroundColor>FF000000</BackgroundColor>
					<X>r240</X>
					<Y>0</Y>
					<Width>80</Width>
					<Height>40</Height>
					<Text>Halt</Text>
					<OnLeftClick>
						relay "all" -event Tehbot_ScheduleHalt
					</OnLeftClick>
					<OnMouseEnter>
						UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This button will relay to all connected sessions running combat missions to halt after the next mission."]
					</OnMouseEnter>
					<OnMouseExit>
						UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
					</OnMouseExit>
				</button>
				<button	Name='Resume'>
					<Font template='Button.Font' />
					<BackgroundColor>FF000000</BackgroundColor>
					<X>r360</X>
					<Y>0</Y>
					<Width>120</Width>
					<Height>40</Height>
					<Text>Resume</Text>
					<OnLeftClick>
						relay "all" -event Tehbot_ScheduleResume
					</OnLeftClick>
					<OnMouseEnter>
						UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This button will relay to all connected sessions running combat missions to resume running, if they were halted using the Halt button."]
					</OnMouseEnter>
					<OnMouseExit>
						UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
					</OnMouseExit>
				</button>
			</Children>
		</TitleBar>
		<Children name="Tehbot_CombatMissions_Children">
			<Frame name="Tehbot_CombatMissions_Frame">
				<X>0</X>
				<Y>30</Y>
				<Width>100%</Width>
				<Height>100%</Height>
				<BackgroundColor>FF000000</BackgroundColor>
				<Border>1</Border>
				<BorderColor>FFFFFFFF</BorderColor>
				<Children name="Tehbot_CombatMissions_Frame_Children">
					<Text name='obj_CombatInformation'>
						<Font template='Information.Font' />
						<X>1%</X>
						<Y>1%</Y>
						<Width>98%</Width>
						<Height>18%</Height>
						<Wrap />
						<Text></Text>
					</Text>
			<TabControl	Name='MissionTabs'>
				<X>0</X>
				<Y>30</Y>
				<Width>100%</Width>
				<Height>100%</Height>
				<Tabs>
					<Tab Name='MainMissionTab'>
						<frame name='MainMissionTabFrame'>
							<BackgroundColor>FF000000</BackgroundColor>
							<Border>1</Border>
							<BorderColor>FFFFFFFF</BorderColor>
							<X>0</X>
							<Y>0</Y>
							<Height>100%</Height>
							<Width>100%</Width>
							<OnLoad>
								This:SetLeftClickThru[TRUE]
							</OnLoad>
						</frame>
					<Checkbox name='Halt'>
						<X>1%</X>
						<Y>1%</Y>
						<Width>32%</Width>
						<Height>4%</Height>
						<Text>Halt After Mission</Text>
						<OnLoad>
							if ${Script[Tehbot].VariableScope.Mission.Config.Halt}
							{
								This:SetChecked
							}
						</OnLoad>
						<OnLeftClick>
							Script[Tehbot].VariableScope.Mission.Config:SetHalt[${This.Checked}]
						</OnLeftClick>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@MainMissionTab@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This will halt the bot after it completes the current mission."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@MainMissionTab@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Checkbox>

					<Checkbox name='DoCombat'>
						<X>1%</X>
						<Y>4%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Text>Do Combat Missions</Text>
						<OnLoad>
							if ${Script[Tehbot].VariableScope.Mission.Config.DoCombat}
							{
								This:SetChecked
							}
						</OnLoad>
						<OnLeftClick>
							Script[Tehbot].VariableScope.Mission.Config:SetDoCombat[${This.Checked}]
						</OnLeftClick>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@MainMissionTab@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["If set, we will do combat missions. This setting does not change whether we do combat storylines in any way. That is another setting. Remember to set the name of your combat ship."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@MainMissionTab@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Checkbox>
					
					<Checkbox name='DoCourier'>
						<X>1%</X>
						<Y>9%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Text>Do Courier Missions</Text>
						<OnLoad>
							if ${Script[Tehbot].VariableScope.Mission.Config.DoCourier}
							{
								This:SetChecked
							}
						</OnLoad>
						<OnLeftClick>
							Script[Tehbot].VariableScope.Mission.Config:SetDoCourier[${This.Checked}]
						</OnLeftClick>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@MainMissionTab@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["If set, we will do courier missions. If storyline is set, we will do those too. Make sure you have the right ships available and configured."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@MainMissionTab@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Checkbox>
					
					<Checkbox name='DoStoryline'>
						<X>1%</X>
						<Y>14%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Text>Do Storyline Missions</Text>
						<OnLoad>
							if ${Script[Tehbot].VariableScope.Mission.Config.DoStoryline}
							{
								This:SetChecked
							}
						</OnLoad>
						<OnLeftClick>
							Script[Tehbot].VariableScope.Mission.Config:SetDoStoryline[${This.Checked}]
						</OnLeftClick>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@MainMissionTab@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["If set, we want to do Storyline missions. By default this causes you to do trade missions. If you have Courier missions set too it will do Storyline Couriers. MAKE SURE YOU HAVE THE PROPER ORE IN LARGE AMOUNTS IN THE STATION WHERE YOUR REGULAR MISSION AGENT IS."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@MainMissionTab@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Checkbox>

					<Checkbox name='DoStorylineCombat'>
						<X>1%</X>
						<Y>19%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Text>Do COMBAT Storyline Missions</Text>
						<OnLoad>
							if ${Script[Tehbot].VariableScope.Mission.Config.DoStorylineCombat}
							{
								This:SetChecked
							}
						</OnLoad>
						<OnLeftClick>
							Script[Tehbot].VariableScope.Mission.Config:SetDoStorylineCombat[${This.Checked}]
						</OnLeftClick>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@MainMissionTab@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["If set, we want to do STORYLINE missions of the COMBAT variety. Don't forget to configure them in your mission data file."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@MainMissionTab@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Checkbox>

					<Checkbox name='RepeatedlyDecline'>
						<X>1%</X>
						<Y>24%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Text>Repeatedly Decline Missions</Text>
						<OnLoad>
							if ${Script[Tehbot].VariableScope.Mission.Config.RepeatedlyDecline}
							{
								This:SetChecked
							}
						</OnLoad>
						<OnLeftClick>
							Script[Tehbot].VariableScope.Mission.Config:SetRepeatedlyDecline[${This.Checked}]
						</OnLeftClick>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@MainMissionTab@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["If set, we will repeatedly decline missions from our primary COMBAT agent regardless of standings loss. This is fine, just set your mission list carefully."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@MainMissionTab@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Checkbox>
					
					<Checkbox name='DeclineLowSec'>
						<X>1%</X>
						<Y>29%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Text>Decline Low-Sec Missions</Text>
						<OnLoad>
							if ${Script[Tehbot].VariableScope.Mission.Config.DeclineLowSec}
							{
								This:SetChecked
							}
						</OnLoad>
						<OnLeftClick>
							Script[Tehbot].VariableScope.Mission.Config:SetDeclineLowSec[${This.Checked}]
						</OnLeftClick>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@MainMissionTab@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["If this is checked, the bot will decline missions with low-sec warning."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@MainMissionTab@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Checkbox>
					
					<Checkbox name='IgnoreNPCSentries'>
						<X>1%</X>
						<Y>37%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Text>Ignore NPC Sentries</Text>
						<OnLoad>
							if ${Script[Tehbot].VariableScope.Mission.Config.IgnoreNPCSentries}
							{
								This:SetChecked
							}
						</OnLoad>
						<OnLeftClick>
							Script[Tehbot].VariableScope.Mission.Config:SetIgnoreNPCSentries[${This.Checked}]
						</OnLeftClick>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@MainMissionTab@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["The bot will ignore NPC sentries unless they web or neut you."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@MainMissionTab@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Checkbox>
					
					<Text name='CombatShipTypeTitle'>
						<X>35%</X>
						<Y>4%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Alignment>Center</Alignment>
						<Text>Combat Ship TYPE</Text>
					</Text>
					<Textentry Name="CombatShipType">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>60%</X>
						<Y>4%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<OnLoad>
							This:SetText[${Script[Tehbot].VariableScope.Mission.Config.CombatShipType}]
						</OnLoad>
						<OnChange>
							Script[Tehbot].VariableScope.Mission.Config:SetCombatShipType[${This.Text}]
						</OnChange>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@MainMissionTab@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["The TYPE of your combat ship. If you have a Paladin named Squidward you want to use for COMBAT MISSIONS, you put Paladin in this box."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@MainMissionTab@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Textentry>

					<Text name='CourierShipTypeTitle'>
						<X>35%</X>
						<Y>9%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Alignment>Center</Alignment>
						<Text>Hauling Ship TYPE</Text>
					</Text>
					<Textentry Name="CourierShipType">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>60%</X>
						<Y>9%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<OnLoad>
							This:SetText[${Script[Tehbot].VariableScope.Mission.Config.CourierShipType}]
						</OnLoad>
						<OnChange>
							Script[Tehbot].VariableScope.Mission.Config:SetCourierShipType[${This.Text}]
						</OnChange>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@MainMissionTab@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["The TYPE of your larger Hauling ship. If you have a Mastodon named Spongebob you want to use for LARGER COURIER MISSIONS, you put Mastodon in this box. Deep Space Transports are good, please don't use an Orca."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@MainMissionTab@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Textentry>
					
					<Text name='FastCourierShipTypeTitle'>
						<X>35%</X>
						<Y>14%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Alignment>Center</Alignment>
						<Text>Fast Courier Ship TYPE</Text>
					</Text>
					<Textentry Name="FastCourierShipType">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>60%</X>
						<Y>14%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<OnLoad>
							This:SetText[${Script[Tehbot].VariableScope.Mission.Config.FastCourierShipType}]
						</OnLoad>
						<OnChange>
							Script[Tehbot].VariableScope.Mission.Config:SetFastCourierShipType[${This.Text}]
						</OnChange>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@MainMissionTab@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["The TYPE of your small Hauling ship. If you have a Taranis named Plankton that you want to use for SMALL COURIER MISSIONS, you put Taranis in this box. Very small cargo means a shuttle, or interceptor, or fast frigate. It will basically only be used for transaction data delivery and a couple middle of combat chain missions."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@MainMissionTab@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Textentry>
					
					<Text name='TradeShipTypeTitle'>
						<X>35%</X>
						<Y>19%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Alignment>Center</Alignment>
						<Text>Ore Hauler Ship TYPE</Text>
					</Text>
					<Textentry Name="TradeShipType">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>60%</X>
						<Y>19%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<OnLoad>
							This:SetText[${Script[Tehbot].VariableScope.Mission.Config.TradeShipType}]
						</OnLoad>
						<OnChange>
							Script[Tehbot].VariableScope.Mission.Config:SetTradeShipType[${This.Text}]
						</OnChange>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@MainMissionTab@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["The TYPE of your ORE HAULER, if you have an Endurance named Patrick that you want to use for ORE TRADE MISSIONS, you would put Endurance in this box. I suggest a Miasmos. Deep Space Transports, Prospects/Endurances (but not ventures) are also acceptable."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@MainMissionTab@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Textentry>
					
					<Text name='SalvagePrefixTitle'>
						<X>1%</X>
						<Y>60%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Alignment>Center</Alignment>
						<Text>Salvage Prefix</Text>
					</Text>
					<Textentry Name="SalvagePrefix">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>1%</X>
						<Y>62%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<OnLoad>
							This:SetText[${Script[Tehbot].VariableScope.Mission.Config.SalvagePrefix}]
						</OnLoad>
						<OnChange>
							Script[Tehbot].VariableScope.Mission.Config:SetSalvagePrefix[${This.Text}]
						</OnChange>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@MainMissionTab@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["The bot will put this at the front of corporate salvage bookmarks it creates.  If it is empty the bot will not create salvage bookmarks.  After this text the bot will add the name of the agent you are running missions for and the current eve time.  Consider putting something unique here to make sure bookmarks will not conflict with each other if you are running multiple mission runners."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@MainMissionTab@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Textentry>
					
					<Text name='SalvageBMFolderTitle'>
						<X>1%</X>
						<Y>53%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Alignment>Center</Alignment>
						<Text>Salvage BM Folder</Text>
					</Text>
					<Textentry Name="SalvageBMFolder">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>1%</X>
						<Y>55%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<OnLoad>
							This:SetText[${Script[Tehbot].VariableScope.Mission.Config.SalvageBMFolderName}]
						</OnLoad>
						<OnChange>
							Script[Tehbot].VariableScope.Mission.Config:SetSalvageBMFolderName[${This.Text}]
						</OnChange>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@MainMissionTab@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["The literal name of your Shared Bookmark Folder. Don't screw this up."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@MainMissionTab@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Textentry>
					
					<Text name='MissionConfigTitle'>
						<X>1%</X>
						<Y>79%</Y>
						<Width>98%</Width>
						<Height>5%</Height>
						<Alignment>Center</Alignment>
						<Text>
							Mission Configuration File
						</Text>
					</Text>
					<combobox Name="MissionConfig">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<X>1%</X>
						<Y>81%</Y>
						<Width>98%</Width>
						<Height>5%</Height>
						<OnLoad>
							variable int Count = 0
							declare DataPath filepath script "${Script[Tehbot].CurrentDirectory}/data"
							declare MissionDataList filelist
							MissionDataList:GetFiles[${DataPath}/\*.iss]
							if ${MissionDataList.Files}
							{
								while ${MissionDataList.Files}>=${Count:Inc}
								{
									This:AddItem[${MissionDataList.File[${Count}].Filename}]
								}
							}
							This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.MissionFile}]:Select
						</OnLoad>
						<OnSelect>
							Script[Tehbot].VariableScope.Mission.Config:SetMissionFile[${This.SelectedItem.Text}]
						</OnSelect>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@MainMissionTab@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures the mission configuration file the bot will use to understand how to run missions.  If you make changes to the file externally, you must stop the bot (or set it to halt after the next mission) and start it again to reload the file."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@MainMissionTab@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</combobox>					
					<Text name='InformationFrameTitle'>
						<X>1%</X>
						<Y>88%</Y>
						<Width>32%</Width>
						<Height>4%</Height>
						<Text>Information</Text>
						<OnLoad>
							This.Font:SetColor[FFFFFF00]
						</OnLoad>
					</Text>
					<Frame name="InformationFrame">
						<X>0%</X>
						<Y>90%</Y>
						<Width>100%</Width>
						<Height>12%</Height>
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<Children>
							<Text name='Information'>
								<X>5%</X>
								<Y>5%</Y>
								<Width>90%</Width>
								<Height>90%</Height>
								<Wrap />
								<VerticalAlignment>Center</VerticalAlignment>
							</Text>
						</Children>
					</Frame>
					</Tab>
					
					<Tab Name='Ammunition/Drones'>
						<frame name='Ammunition/Drones'>
							<BackgroundColor>FF000000</BackgroundColor>
							<Border>1</Border>
							<BorderColor>FFFFFFFF</BorderColor>
							<X>0</X>
							<Y>0</Y>
							<Height>100%</Height>
							<Width>100%</Width>
							<OnLoad>
								This:SetLeftClickThru[TRUE]
							</OnLoad>
						</frame>
					<Text name='AmmoSupplyTitle'>
						<X>1%</X>
						<Y>1%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Alignment>Center</Alignment>
						<Text>
							Ammo Supply Configuration
						</Text>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures how many rounds of ammo you will load before a mission."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Text>
					<Textentry Name="AmmoSupplyValue">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>1%</X>
						<Y>5%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<OnLoad>
							This:SetText[${Script[Tehbot].VariableScope.Mission.Config.AmmoAmountToLoad}]
						</OnLoad>
						<OnChange>
							Script[Tehbot].VariableScope.Mission.Config:SetAmmoAmountToLoad[${This.Text}]
						</OnChange>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["How much ammo will you carry? Make sure you have enough room for double this amount and whatever you need to pick up in the mission."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Textentry>					
					<Checkbox name='UseDrones'>
						<X>1%</X>
						<Y>12%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Text>Use Drones</Text>
						<OnLoad>
							if ${Script[Tehbot].VariableScope.Mission.Config.UseDrones}
							{
								This:SetChecked
							}
						</OnLoad>
						<OnLeftClick>
							Script[Tehbot].VariableScope.Mission.Config:SetDrones[${This.Checked}]
							if ${This.Checked}
							{
								UIElement[DroneType@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Show
							}
							else
							{
								UIElement[DroneType@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Hide
							}
						</OnLeftClick>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["Check this if you'll be using drones to shoot small shit. This tells the bot to make sure to top off drones before running a mission."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Checkbox>

					<combobox Name="DroneType">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<X>1%</X>
						<Y>16%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<OnLoad>
							if !${Script[Tehbot].VariableScope.Mission.Config.UseDrones}
								This:Hide
							variable index:item cargo
							variable iterator c
							EVEWindow[Inventory].ChildWindow[${Me.ShipID},ShipDroneBay]:GetItems[cargo]
							cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Drone"]}, FALSE]
							cargo:GetIterator[c]
							if ${c:First(exists)}
								do
								{
									if !${This.ItemByText[${c.Value.Type}](exists)}
									{
										This:AddItem[${c.Value.Type}]
									}
								}
								while ${c:Next(exists)}
							if ${Me.Station(exists)}
							{
								EVEWindow[Inventory].ChildWindow[${Me.Station.ID},StationItems]:GetItems[cargo]
								cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Drone"]}, FALSE]
								cargo:GetIterator[c]
								if ${c:First(exists)}
									do
									{
										if !${This.ItemByText[${c.Value.Type}](exists)}
											This:AddItem[${c.Value.Type}]
									}
									while ${c:Next(exists)}
							}
							if ${Script[Tehbot].VariableScope.Mission.Config.DroneType.NotNULLOrEmpty}
							{
								if !${This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.DroneType}](exists)}
									This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.DroneType}]:Select
							}
							This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.DroneType}]:Select
							This:SetZOrder[movetop]
						</OnLoad>
						<OnSelect>
							Script[Tehbot].VariableScope.Mission.Config:SetDroneType[${This.SelectedItem.Text}]
						</OnSelect>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures the type of drone the bot will top off before a mission."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</combobox>
						
					<Text name='KineticAmmoLabel'>
						<X>35%</X>
						<Y>3%</Y>
						<Width>50%</Width>
						<Height>5%</Height>
						<Alignment>Left</Alignment>
						<Text>Kinetic Ammo</Text>
					</Text>
					<combobox Name="KineticAmmo">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<X>50%</X>
						<Y>2%</Y>
						<Width>49%</Width>
						<Height>5%</Height>
						<OnLoad>
							variable index:item cargo
							EVEWindow[Inventory].ChildWindow[${Me.ShipID},ShipCargo]:GetItems[cargo]
							cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Charge"]}, FALSE]
							variable iterator c
							cargo:GetIterator[c]
							if ${c:First(exists)}
								do
								{
									if !${This.ItemByText[${c.Value.Type}](exists)}
									{
										This:AddItem[${c.Value.Type}]
									}
								}
								while ${c:Next(exists)}
							if ${Me.Station(exists)}
							{
								EVEWindow[Inventory].ChildWindow[${Me.Station.ID},StationItems]:GetItems[cargo]
								cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Charge"]}, FALSE]
								if ${c:First(exists)}
									do
									{
										if !${This.ItemByText[${c.Value.Type}](exists)}
										{
											This:AddItem[${c.Value.Type}]
										}
									}
									while ${c:Next(exists)}
							}
							if ${Script[Tehbot].VariableScope.Mission.Config.KineticAmmo.NotNULLOrEmpty}
							{
								if !${This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.KineticAmmo}](exists)}
									This:AddItem[${Script[Tehbot].VariableScope.Mission.Config.KineticAmmo}]
							}
							This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.KineticAmmo}]:Select
							This:SetZOrder[movetop]
						</OnLoad>
						<OnSelect>
							Script[Tehbot].VariableScope.Mission.Config:SetKineticAmmo[${This.SelectedItem.Text}]
						</OnSelect>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures the ammo the bot will load and shoot when a mission is marked to have enemies weak to this damage type.  Note that the list is populated from the current ship's cargo hold and (if docked) your item hangar.  If you are using a Corporate Hangar, move some ammo to your item hangar while you configure the bot."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</combobox>
					<Text name='ThermalAmmoLabel'>
						<X>35%</X>
						<Y>9%</Y>
						<Width>50%</Width>
						<Height>5%</Height>
						<Alignment>Left</Alignment>
						<Text>Thermal Ammo</Text>
					</Text>
					<combobox Name="ThermalAmmo">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<X>50%</X>
						<Y>8%</Y>
						<Width>49%</Width>
						<Height>5%</Height>
						<OnLoad>
							variable index:item cargo
							EVEWindow[Inventory].ChildWindow[${Me.ShipID},ShipCargo]:GetItems[cargo]
							cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Charge"]}, FALSE]
							variable iterator c
							cargo:GetIterator[c]
							if ${c:First(exists)}
								do
								{
									if !${This.ItemByText[${c.Value.Type}](exists)}
									{
										This:AddItem[${c.Value.Type}]
									}
								}
								while ${c:Next(exists)}
							if ${Me.Station(exists)}
							{
								EVEWindow[Inventory].ChildWindow[${Me.Station.ID},StationItems]:GetItems[cargo]
								cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Charge"]}, FALSE]
								if ${c:First(exists)}
									do
									{
										if !${This.ItemByText[${c.Value.Type}](exists)}
										{
											This:AddItem[${c.Value.Type}]
										}
									}
									while ${c:Next(exists)}
							}
							if ${Script[Tehbot].VariableScope.Mission.Config.ThermalAmmo.NotNULLOrEmpty}
							{
								if !${This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.ThermalAmmo}](exists)}
									This:AddItem[${Script[Tehbot].VariableScope.Mission.Config.ThermalAmmo}]
							}
							This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.ThermalAmmo}]:Select
							This:SetZOrder[movetop]
						</OnLoad>
						<OnSelect>
							Script[Tehbot].VariableScope.Mission.Config:SetThermalAmmo[${This.SelectedItem.Text}]
						</OnSelect>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures the ammo the bot will load and shoot when a mission is marked to have enemies weak to this damage type.  Note that the list is populated from the current ship's cargo hold and (if docked) your item hangar.  If you are using a Corporate Hangar, move some ammo to your item hangar while you configure the bot."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</combobox>
					<Text name='EMAmmoLabel'>
						<X>35%</X>
						<Y>15%</Y>
						<Width>50%</Width>
						<Height>5%</Height>
						<Alignment>Left</Alignment>
						<Text>EM Ammo</Text>
					</Text>
					<combobox Name="EMAmmo">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<X>50%</X>
						<Y>14%</Y>
						<Width>49%</Width>
						<Height>5%</Height>
						<OnLoad>
							variable index:item cargo
							EVEWindow[Inventory].ChildWindow[${Me.ShipID},ShipCargo]:GetItems[cargo]
							cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Charge"]}, FALSE]
							variable iterator c
							cargo:GetIterator[c]
							if ${c:First(exists)}
								do
								{
									if !${This.ItemByText[${c.Value.Type}](exists)}
									{
										This:AddItem[${c.Value.Type}]
									}
								}
								while ${c:Next(exists)}
							if ${Me.Station(exists)}
							{
								EVEWindow[Inventory].ChildWindow[${Me.Station.ID},StationItems]:GetItems[cargo]
								cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Charge"]}, FALSE]
								if ${c:First(exists)}
									do
									{
										if !${This.ItemByText[${c.Value.Type}](exists)}
										{
											This:AddItem[${c.Value.Type}]
										}
									}
									while ${c:Next(exists)}
							}
							if ${Script[Tehbot].VariableScope.Mission.Config.EMAmmo.NotNULLOrEmpty}
							{
								if !${This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.EMAmmo}](exists)}
									This:AddItem[${Script[Tehbot].VariableScope.Mission.Config.EMAmmo}]
							}
							This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.EMAmmo}]:Select
							This:SetZOrder[movetop]
						</OnLoad>
						<OnSelect>
							Script[Tehbot].VariableScope.Mission.Config:SetEMAmmo[${This.SelectedItem.Text}]
						</OnSelect>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures the ammo the bot will load and shoot when a mission is marked to have enemies weak to this damage type.  Note that the list is populated from the current ship's cargo hold and (if docked) your item hangar.  If you are using a Corporate Hangar, move some ammo to your item hangar while you configure the bot."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</combobox>
					<Text name='ExplosiveAmmoLabel'>
						<X>35%</X>
						<Y>21%</Y>
						<Width>50%</Width>
						<Height>5%</Height>
						<Alignment>Left</Alignment>
						<Text>Explosive Ammo</Text>
					</Text>
					<combobox Name="ExplosiveAmmo">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<X>50%</X>
						<Y>20%</Y>
						<Width>49%</Width>
						<Height>5%</Height>
						<OnLoad>
							variable index:item cargo
							EVEWindow[Inventory].ChildWindow[${Me.ShipID},ShipCargo]:GetItems[cargo]
							cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Charge"]}, FALSE]
							variable iterator c
							cargo:GetIterator[c]
							if ${c:First(exists)}
								do
								{
									if !${This.ItemByText[${c.Value.Type}](exists)}
									{
										This:AddItem[${c.Value.Type}]
									}
								}
								while ${c:Next(exists)}
							if ${Me.Station(exists)}
							{
								EVEWindow[Inventory].ChildWindow[${Me.Station.ID},StationItems]:GetItems[cargo]
								cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Charge"]}, FALSE]
								if ${c:First(exists)}
									do
									{
										if !${This.ItemByText[${c.Value.Type}](exists)}
										{
											This:AddItem[${c.Value.Type}]
										}
									}
									while ${c:Next(exists)}
							}
							if ${Script[Tehbot].VariableScope.Mission.Config.ExplosiveAmmo.NotNULLOrEmpty}
							{
								if !${This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.ExplosiveAmmo}](exists)}
									This:AddItem[${Script[Tehbot].VariableScope.Mission.Config.ExplosiveAmmo}]
							}
							This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.ExplosiveAmmo}]:Select
							This:SetZOrder[movetop]
						</OnLoad>
						<OnSelect>
							Script[Tehbot].VariableScope.Mission.Config:SetExplosiveAmmo[${This.SelectedItem.Text}]
						</OnSelect>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures the ammo the bot will load and shoot when a mission is marked to have enemies weak to this damage type.  Note that the list is populated from the current ship's cargo hold and (if docked) your item hangar.  If you are using a Corporate Hangar, move some ammo to your item hangar while you configure the bot."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</combobox>

					<Checkbox name='UseSecondary'>
						<X>35%</X>
						<Y>26%</Y>
						<Width>50%</Width>
						<Height>5%</Height>
						<Text>Use Long-range Ammo</Text>
						<OnLoad>
							if ${Script[Tehbot].VariableScope.Mission.Config.UseSecondaryAmmo}
							{
								This:SetChecked
							}
						</OnLoad>
						<OnLeftClick>
							Script[Tehbot].VariableScope.Mission.Config:SetSecondary[${This.Checked}]
							if ${This.Checked}
							{
								UIElement[KineticAmmoLabel2@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Show
								UIElement[KineticAmmo2@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Show
								UIElement[ThermalAmmoLabel2@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Show
								UIElement[ThermalAmmo2@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Show
								UIElement[EMAmmoLabel2@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Show
								UIElement[EMAmmo2@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Show
								UIElement[ExplosiveAmmoLabel2@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Show
								UIElement[ExplosiveAmmo2@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Show
							}
							else
							{
								UIElement[KineticAmmoLabel2@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Hide
								UIElement[KineticAmmo2@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Hide
								UIElement[ThermalAmmoLabel2@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Hide
								UIElement[ThermalAmmo2@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Hide
								UIElement[EMAmmoLabel2@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Hide
								UIElement[EMAmmo2@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Hide
								UIElement[ExplosiveAmmoLabel2@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Hide
								UIElement[ExplosiveAmmo2@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Hide
							}
						</OnLeftClick>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["If you are flying a ship that needs to swap between a short-range, higher damage ammo and a long-range, lower damage ammo, select this option.  Make sure you have enough cargo space to fit two times the ammo, AND any mission items you need to loot!"]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Checkbox>

					<Text name='KineticAmmoLabel2'>
						<X>35%</X>
						<Y>32%</Y>
						<Width>50%</Width>
						<Height>5%</Height>
						<Alignment>Left</Alignment>
						<Text>Kinetic Ammo</Text>
						<OnLoad>
							if !${Script[Tehbot].VariableScope.Mission.Config.UseSecondaryAmmo}
							{
								This:Hide
							}
						</OnLoad>
					</Text>
					<combobox Name="KineticAmmo2">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<X>50%</X>
						<Y>31%</Y>
						<Width>49%</Width>
						<Height>5%</Height>
						<OnLoad>
							variable index:item cargo
							EVEWindow[Inventory].ChildWindow[${Me.ShipID},ShipCargo]:GetItems[cargo]
							cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Charge"]}, FALSE]
							variable iterator c
							cargo:GetIterator[c]
							if ${c:First(exists)}
								do
								{
									if !${This.ItemByText[${c.Value.Type}](exists)}
									{
										This:AddItem[${c.Value.Type}]
									}
								}
								while ${c:Next(exists)}
							if ${Me.Station(exists)}
							{
								EVEWindow[Inventory].ChildWindow[${Me.Station.ID},StationItems]:GetItems[cargo]
								cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Charge"]}, FALSE]
								if ${c:First(exists)}
									do
									{
										if !${This.ItemByText[${c.Value.Type}](exists)}
										{
											This:AddItem[${c.Value.Type}]
										}
									}
									while ${c:Next(exists)}
							}
							if ${Script[Tehbot].VariableScope.Mission.Config.KineticAmmoSecondary.NotNULLOrEmpty}
							{
								if !${This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.KineticAmmoSecondary}](exists)}
									This:AddItem[${Script[Tehbot].VariableScope.Mission.Config.KineticAmmoSecondary}]
							}
							This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.KineticAmmoSecondary}]:Select
							This:SetZOrder[movetop]
							if !${Script[Tehbot].VariableScope.Mission.Config.UseSecondaryAmmo}
							{
								This:Hide
							}
						</OnLoad>
						<OnSelect>
							Script[Tehbot].VariableScope.Mission.Config:SetKineticAmmoSecondary[${This.SelectedItem.Text}]
						</OnSelect>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures the long range ammo the bot will load and shoot when a mission is marked to have enemies weak to this damage type.  Note that the list is populated from the current ship's cargo hold and (if docked) your item hangar.  If you are using a Corporate Hangar, move some ammo to your item hangar while you configure the bot."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</combobox>
					<Text name='ThermalAmmoLabel2'>
						<X>35%</X>
						<Y>38%</Y>
						<Width>50%</Width>
						<Height>5%</Height>
						<Alignment>Left</Alignment>
						<Text>Thermal Ammo</Text>
						<OnLoad>
							if !${Script[Tehbot].VariableScope.Mission.Config.UseSecondaryAmmo}
							{
								This:Hide
							}
						</OnLoad>
					</Text>
					<combobox Name="ThermalAmmo2">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<X>50%</X>
						<Y>37%</Y>
						<Width>49%</Width>
						<Height>5%</Height>
						<OnLoad>
							variable index:item cargo
							EVEWindow[Inventory].ChildWindow[${Me.ShipID},ShipCargo]:GetItems[cargo]
							cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Charge"]}, FALSE]
							variable iterator c
							cargo:GetIterator[c]
							if ${c:First(exists)}
								do
								{
									if !${This.ItemByText[${c.Value.Type}](exists)}
									{
										This:AddItem[${c.Value.Type}]
									}
								}
								while ${c:Next(exists)}
							if ${Me.Station(exists)}
							{
								EVEWindow[Inventory].ChildWindow[${Me.Station.ID},StationItems]:GetItems[cargo]
								cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Charge"]}, FALSE]
								if ${c:First(exists)}
									do
									{
										if !${This.ItemByText[${c.Value.Type}](exists)}
										{
											This:AddItem[${c.Value.Type}]
										}
									}
									while ${c:Next(exists)}
							}
							if ${Script[Tehbot].VariableScope.Mission.Config.ThermalAmmoSecondary.NotNULLOrEmpty}
							{
								if !${This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.ThermalAmmoSecondary}](exists)}
									This:AddItem[${Script[Tehbot].VariableScope.Mission.Config.ThermalAmmoSecondary}]
							}
							This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.ThermalAmmoSecondary}]:Select
							This:SetZOrder[movetop]
							if !${Script[Tehbot].VariableScope.Mission.Config.UseSecondaryAmmo}
							{
								This:Hide
							}
						</OnLoad>
						<OnSelect>
							Script[Tehbot].VariableScope.Mission.Config:SetThermalAmmoSecondary[${This.SelectedItem.Text}]
						</OnSelect>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures the long range ammo the bot will load and shoot when a mission is marked to have enemies weak to this damage type.  Note that the list is populated from the current ship's cargo hold and (if docked) your item hangar.  If you are using a Corporate Hangar, move some ammo to your item hangar while you configure the bot."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</combobox>
					<Text name='EMAmmoLabel2'>
						<X>35%</X>
						<Y>44%</Y>
						<Width>50%</Width>
						<Height>5%</Height>
						<Alignment>Left</Alignment>
						<Text>EM Ammo</Text>
						<OnLoad>
							if !${Script[Tehbot].VariableScope.Mission.Config.UseSecondaryAmmo}
							{
								This:Hide
							}
						</OnLoad>
					</Text>
					<combobox Name="EMAmmo2">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<X>50%</X>
						<Y>43%</Y>
						<Width>49%</Width>
						<Height>5%</Height>
						<OnLoad>
							variable index:item cargo
							EVEWindow[Inventory].ChildWindow[${Me.ShipID},ShipCargo]:GetItems[cargo]
							cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Charge"]}, FALSE]
							variable iterator c
							cargo:GetIterator[c]
							if ${c:First(exists)}
								do
								{
									if !${This.ItemByText[${c.Value.Type}](exists)}
									{
										This:AddItem[${c.Value.Type}]
									}
								}
								while ${c:Next(exists)}
							if ${Me.Station(exists)}
							{
								EVEWindow[Inventory].ChildWindow[${Me.Station.ID},StationItems]:GetItems[cargo]
								cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Charge"]}, FALSE]
								if ${c:First(exists)}
									do
									{
										if !${This.ItemByText[${c.Value.Type}](exists)}
										{
											This:AddItem[${c.Value.Type}]
										}
									}
									while ${c:Next(exists)}
							}
							if ${Script[Tehbot].VariableScope.Mission.Config.EMAmmoSecondary.NotNULLOrEmpty}
							{
								if !${This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.EMAmmoSecondary}](exists)}
									This:AddItem[${Script[Tehbot].VariableScope.Mission.Config.EMAmmoSecondary}]
							}
							This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.EMAmmoSecondary}]:Select
							This:SetZOrder[movetop]
							if !${Script[Tehbot].VariableScope.Mission.Config.UseSecondaryAmmo}
							{
								This:Hide
							}
						</OnLoad>
						<OnSelect>
							Script[Tehbot].VariableScope.Mission.Config:SetEMAmmoSecondary[${This.SelectedItem.Text}]
						</OnSelect>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures the long range ammo the bot will load and shoot when a mission is marked to have enemies weak to this damage type.  Note that the list is populated from the current ship's cargo hold and (if docked) your item hangar.  If you are using a Corporate Hangar, move some ammo to your item hangar while you configure the bot."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</combobox>
					<Text name='ExplosiveAmmoLabel2'>
						<X>35%</X>
						<Y>50%</Y>
						<Width>50%</Width>
						<Height>5%</Height>
						<Alignment>Left</Alignment>
						<Text>Explosive Ammo</Text>
						<OnLoad>
							if !${Script[Tehbot].VariableScope.Mission.Config.UseSecondaryAmmo}
							{
								This:Hide
							}
						</OnLoad>
					</Text>
					<combobox Name="ExplosiveAmmo2">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<X>50%</X>
						<Y>49%</Y>
						<Width>49%</Width>
						<Height>5%</Height>
						<OnLoad>
							variable index:item cargo
							EVEWindow[Inventory].ChildWindow[${Me.ShipID},ShipCargo]:GetItems[cargo]
							cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Charge"]}, FALSE]
							variable iterator c
							cargo:GetIterator[c]
							if ${c:First(exists)}
								do
								{
									if !${This.ItemByText[${c.Value.Type}](exists)}
									{
										This:AddItem[${c.Value.Type}]
									}
								}
								while ${c:Next(exists)}
							if ${Me.Station(exists)}
							{
								EVEWindow[Inventory].ChildWindow[${Me.Station.ID},StationItems]:GetItems[cargo]
								cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Charge"]}, FALSE]
								if ${c:First(exists)}
									do
									{
										if !${This.ItemByText[${c.Value.Type}](exists)}
										{
											This:AddItem[${c.Value.Type}]
										}
									}
									while ${c:Next(exists)}
							}
							if ${Script[Tehbot].VariableScope.Mission.Config.ExplosiveAmmoSecondary.NotNULLOrEmpty}
							{
								if !${This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.ExplosiveAmmoSecondary}](exists)}
									This:AddItem[${Script[Tehbot].VariableScope.Mission.Config.ExplosiveAmmoSecondary}]
							}
							This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.ExplosiveAmmoSecondary}]:Select
							This:SetZOrder[movetop]
							if !${Script[Tehbot].VariableScope.Mission.Config.UseSecondaryAmmo}
							{
								This:Hide
							}
						</OnLoad>
						<OnSelect>
							Script[Tehbot].VariableScope.Mission.Config:SetExplosiveAmmoSecondary[${This.SelectedItem.Text}]
						</OnSelect>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures the long range ammo the bot will load and shoot when a mission is marked to have enemies weak to this damage type.  Note that the list is populated from the current ship's cargo hold and (if docked) your item hangar.  If you are using a Corporate Hangar, move some ammo to your item hangar while you configure the bot."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</combobox>

					<Checkbox name='UseMissilePrecisionVariant'>
						<X>1%</X>
						<Y>20%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Text>Use Precision Missile Variant</Text>
						<OnLoad>
							if ${Script[Tehbot].VariableScope.Mission.Config.UseMissilePrecisionVariant}
							{
								This:SetChecked
							}
						</OnLoad>
						<OnLeftClick>
							Script[Tehbot].VariableScope.Mission.Config:SetUseMissilePrecisionVariant[${This.Checked}]
						</OnLeftClick>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["Check this if you want to load the Precision Variant of your current Missile. Torps this won't do anything."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Checkbox>
					<Textentry Name="MissilePrecisionVariantAmount">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>1%</X>
						<Y>24%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<OnLoad>
							This:SetText[${Script[Tehbot].VariableScope.Mission.Config.MissilePrecisionVariantAmount}]
						</OnLoad>
						<OnChange>
							Script[Tehbot].VariableScope.Mission.Config:SetMissilePrecisionVariantAmount[${This.Text}]
						</OnChange>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["We will load this many units of your Precision Missile Variant. Cargo space, remember your cargo space."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Textentry>
					
					<Checkbox name='UseMissileHighDamageVariant'>
						<X>1%</X>
						<Y>28%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Text>Use HighDamage Missile Variant</Text>
						<OnLoad>
							if ${Script[Tehbot].VariableScope.Mission.Config.UseMissileHighDamageVariant}
							{
								This:SetChecked
							}
						</OnLoad>
						<OnLeftClick>
							Script[Tehbot].VariableScope.Mission.Config:SetUseMissileHighDamageVariant[${This.Checked}]
						</OnLeftClick>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["Check this if you want to load the HighDamage Variant of your current Missile. Rage or Fury."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Checkbox>
					<Textentry Name="MissileHighDamageVariantAmount">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>1%</X>
						<Y>32%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<OnLoad>
							This:SetText[${Script[Tehbot].VariableScope.Mission.Config.MissileHighDamageVariantAmount}]
						</OnLoad>
						<OnChange>
							Script[Tehbot].VariableScope.Mission.Config:SetMissileHighDamageVariantAmount[${This.Text}]
						</OnChange>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["We will load this many units of your HighDamage Missile Variant. Cargo space, remember your cargo space."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Textentry>

					<Text name='TurretExtraAmmo1Title'>
						<X>1%</X>
						<Y>52%</Y>
						<Width>40%</Width>
						<Height>5%</Height>
						<Alignment>Left</Alignment>
						<Text>
							Turret Extra Ammo 1  Name / Amount
						</Text>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures how many rounds of ammo you will load before a mission."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Text>
					<Textentry Name="TurretExtraAmmo1String">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>1%</X>
						<Y>56%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<OnLoad>
							This:SetText[${Script[Tehbot].VariableScope.Mission.Config.TurretExtraAmmo1}]
						</OnLoad>
						<OnChange>
							Script[Tehbot].VariableScope.Mission.Config:SetTurretExtraAmmo1[${This.Text}]
						</OnChange>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["What is the Literal Name of your extra ammo? Ex. Barrage L , Scorch L , Quake M."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Textentry>					
					<Textentry Name="TurretExtraAmmo1Quantity">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>31%</X>
						<Y>56%</Y>
						<Width>9%</Width>
						<Height>5%</Height>
						<OnLoad>
							This:SetText[${Script[Tehbot].VariableScope.Mission.Config.TurretExtraAmmo1Amount}]
						</OnLoad>
						<OnChange>
							Script[Tehbot].VariableScope.Mission.Config:SetTurretExtraAmmo1Amount[${This.Text}]
						</OnChange>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["How much of this Extra Ammo will we load? Be reasonable and mindful of cargo space here."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Textentry>						
	
					<Text name='TurretExtraAmmo2Title'>
						<X>1%</X>
						<Y>63%</Y>
						<Width>40%</Width>
						<Height>5%</Height>
						<Alignment>Left</Alignment>
						<Text>
							Turret Extra Ammo 2  Name / Amount
						</Text>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures how many rounds of ammo you will load before a mission."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Text>
					<Textentry Name="TurretExtraAmmo2String">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>1%</X>
						<Y>66%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<OnLoad>
							This:SetText[${Script[Tehbot].VariableScope.Mission.Config.TurretExtraAmmo2}]
						</OnLoad>
						<OnChange>
							Script[Tehbot].VariableScope.Mission.Config:SetTurretExtraAmmo2[${This.Text}]
						</OnChange>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["What is the Literal Name of your extra ammo? Ex. Barrage L , Scorch L , Quake M."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Textentry>					
					<Textentry Name="TurretExtraAmmo2Quantity">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>31%</X>
						<Y>66%</Y>
						<Width>9%</Width>
						<Height>5%</Height>
						<OnLoad>
							This:SetText[${Script[Tehbot].VariableScope.Mission.Config.TurretExtraAmmo2Amount}]
						</OnLoad>
						<OnChange>
							Script[Tehbot].VariableScope.Mission.Config:SetTurretExtraAmmo2Amount[${This.Text}]
						</OnChange>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["How much of this Extra Ammo will we load? Be reasonable and mindful of cargo space here."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Textentry>

					<Text name='TurretExtraAmmo3Title'>
						<X>1%</X>
						<Y>72%</Y>
						<Width>40%</Width>
						<Height>5%</Height>
						<Alignment>Left</Alignment>
						<Text>
							Turret Extra Ammo 3  Name / Amount
						</Text>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures how many rounds of ammo you will load before a mission."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Text>
					<Textentry Name="TurretExtraAmmo3String">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>1%</X>
						<Y>76%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<OnLoad>
							This:SetText[${Script[Tehbot].VariableScope.Mission.Config.TurretExtraAmmo3}]
						</OnLoad>
						<OnChange>
							Script[Tehbot].VariableScope.Mission.Config:SetTurretExtraAmmo3[${This.Text}]
						</OnChange>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["What is the Literal Name of your extra ammo? Ex. Barrage L , Scorch L , Quake M."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Textentry>					
					<Textentry Name="TurretExtraAmmo3Quantity">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>31%</X>
						<Y>76%</Y>
						<Width>9%</Width>
						<Height>5%</Height>
						<OnLoad>
							This:SetText[${Script[Tehbot].VariableScope.Mission.Config.TurretExtraAmmo3Amount}]
						</OnLoad>
						<OnChange>
							Script[Tehbot].VariableScope.Mission.Config:SetTurretExtraAmmo3Amount[${This.Text}]
						</OnChange>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["How much of this Extra Ammo will we load? Be reasonable and mindful of cargo space here."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Textentry>

					<Text name='TurretExtraAmmo4Title'>
						<X>1%</X>
						<Y>82%</Y>
						<Width>40%</Width>
						<Height>5%</Height>
						<Alignment>Left</Alignment>
						<Text>
							Turret Extra Ammo 4  Name / Amount
						</Text>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures how many rounds of ammo you will load before a mission."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Text>
					<Textentry Name="TurretExtraAmmo4String">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>1%</X>
						<Y>86%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<OnLoad>
							This:SetText[${Script[Tehbot].VariableScope.Mission.Config.TurretExtraAmmo4}]
						</OnLoad>
						<OnChange>
							Script[Tehbot].VariableScope.Mission.Config:SetTurretExtraAmmo4[${This.Text}]
						</OnChange>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["What is the Literal Name of your extra ammo? Ex. Barrage L , Scorch L , Quake M."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Textentry>					
					<Textentry Name="TurretExtraAmmo4Quantity">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>31%</X>
						<Y>86%</Y>
						<Width>9%</Width>
						<Height>5%</Height>
						<OnLoad>
							This:SetText[${Script[Tehbot].VariableScope.Mission.Config.TurretExtraAmmo4Amount}]
						</OnLoad>
						<OnChange>
							Script[Tehbot].VariableScope.Mission.Config:SetTurretExtraAmmo4Amount[${This.Text}]
						</OnChange>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["How much of this Extra Ammo will we load? Be reasonable and mindful of cargo space here."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Textentry>

					<Text name='ExtraDrone1Title'>
						<X>51%</X>
						<Y>63%</Y>
						<Width>40%</Width>
						<Height>5%</Height>
						<Alignment>Left</Alignment>
						<Text>
							Extra Drone 1  Name / Amount
						</Text>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures how many rounds of ammo you will load before a mission."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Text>
					<Textentry Name="ExtraDrone1String">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>51%</X>
						<Y>66%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<OnLoad>
							This:SetText[${Script[Tehbot].VariableScope.Mission.Config.ExtraDrone1}]
						</OnLoad>
						<OnChange>
							Script[Tehbot].VariableScope.Mission.Config:SetExtraDrone1[${This.Text}]
						</OnChange>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["What is the Literal Name of your extra drones? Republic Fleet Warrior, Imperial Navy Acolyte, etc."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Textentry>					
					<Textentry Name="ExtraDrone1Quantity">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>81%</X>
						<Y>66%</Y>
						<Width>9%</Width>
						<Height>5%</Height>
						<OnLoad>
							This:SetText[${Script[Tehbot].VariableScope.Mission.Config.ExtraDrone1Amount}]
						</OnLoad>
						<OnChange>
							Script[Tehbot].VariableScope.Mission.Config:SetExtraDrone1Amount[${This.Text}]
						</OnChange>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["How many of this drone will you load? Do your math please, your main drone will take whatever space is left after these extras."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Textentry>						
	
					<Text name='ExtraDrone2Title'>
						<X>51%</X>
						<Y>73%</Y>
						<Width>40%</Width>
						<Height>5%</Height>
						<Alignment>Left</Alignment>
						<Text>
							Extra Drone 2  Name / Amount
						</Text>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures how many rounds of ammo you will load before a mission."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Text>
					<Textentry Name="ExtraDrone2String">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>51%</X>
						<Y>76%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<OnLoad>
							This:SetText[${Script[Tehbot].VariableScope.Mission.Config.ExtraDrone2}]
						</OnLoad>
						<OnChange>
							Script[Tehbot].VariableScope.Mission.Config:SetExtraDrone2[${This.Text}]
						</OnChange>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["What is the Literal Name of your extra drones? Republic Fleet Warrior, Imperial Navy Acolyte, etc."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Textentry>					
					<Textentry Name="ExtraDrone2Quantity">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>81%</X>
						<Y>76%</Y>
						<Width>9%</Width>
						<Height>5%</Height>
						<OnLoad>
							This:SetText[${Script[Tehbot].VariableScope.Mission.Config.ExtraDrone2Amount}]
						</OnLoad>
						<OnChange>
							Script[Tehbot].VariableScope.Mission.Config:SetExtraDrone2Amount[${This.Text}]
						</OnChange>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["How many of this drone will you load? Do your math please, your main drone will take whatever space is left after these extras."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Textentry>

					<Text name='ExtraDrone3Title'>
						<X>51%</X>
						<Y>82</Y>
						<Width>40%</Width>
						<Height>5%</Height>
						<Alignment>Left</Alignment>
						<Text>
							Extra Drone 3  Name / Amount
						</Text>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures how many rounds of ammo you will load before a mission."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Text>
					<Textentry Name="ExtraDrone3String">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>51%</X>
						<Y>86%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<OnLoad>
							This:SetText[${Script[Tehbot].VariableScope.Mission.Config.ExtraDrone3}]
						</OnLoad>
						<OnChange>
							Script[Tehbot].VariableScope.Mission.Config:SetExtraDrone3[${This.Text}]
						</OnChange>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["What is the Literal Name of your extra drones? Republic Fleet Warrior, Imperial Navy Acolyte, etc."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Textentry>					
					<Textentry Name="ExtraDrone3Quantity">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>81%</X>
						<Y>86%</Y>
						<Width>9%</Width>
						<Height>5%</Height>
						<OnLoad>
							This:SetText[${Script[Tehbot].VariableScope.Mission.Config.ExtraDrone3Amount}]
						</OnLoad>
						<OnChange>
							Script[Tehbot].VariableScope.Mission.Config:SetExtraDrone3Amount[${This.Text}]
						</OnChange>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["How many of this drone will you load? Do your math please, your main drone will take whatever space is left after these extras."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Ammunition/Drones@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Textentry>
					
					<Text name='InformationFrameTitle'>
						<X>1%</X>
						<Y>90%</Y>
						<Width>32%</Width>
						<Height>4%</Height>
						<Text>Information</Text>
						<OnLoad>
							This.Font:SetColor[FFFFFF00]
						</OnLoad>
					</Text>
					<Frame name="InformationFrame">
						<X>0%</X>
						<Y>92%</Y>
						<Width>100%</Width>
						<Height>10%</Height>
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<Children>
							<Text name='Information'>
								<X>5%</X>
								<Y>5%</Y>
								<Width>90%</Width>
								<Height>90%</Height>
								<Wrap />
								<VerticalAlignment>Center</VerticalAlignment>
							</Text>
						</Children>
					</Frame>
					</Tab>
					<Tab Name='Storage/Misc'>
						<frame name='Storage/Misc'>
							<BackgroundColor>FF000000</BackgroundColor>
							<Border>1</Border>
							<BorderColor>FFFFFFFF</BorderColor>
							<X>0</X>
							<Y>0</Y>
							<Height>100%</Height>
							<Width>100%</Width>
							<OnLoad>
								This:SetLeftClickThru[TRUE]
							</OnLoad>
						</frame>
						
					<Checkbox name='SidekickMode'>
						<X>1%</X>
						<Y>4%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Text>Sidekick Mode</Text>
						<OnLoad>
							if ${Script[Tehbot].VariableScope.Mission.Config.SidekickMode}
							{
								This:SetChecked
							}
						</OnLoad>
						<OnLeftClick>
							Script[Tehbot].VariableScope.Mission.Config:SetSidekickMode[${This.Checked}]
						</OnLeftClick>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Storage/Misc@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["If checked, and if I implement it, this bot will follow the fleet member named in the Primary Name box. They must be on the same local machine. Sidekick will just follow them through missions, assisting."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Storage/Misc@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Checkbox>					

					<Text name='PrimaryNameTitle'>
						<X>20%</X>
						<Y>4%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Alignment>Center</Alignment>
						<Text>Primary Name</Text>
					</Text>
					<Textentry Name="PrimaryName">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>60%</X>
						<Y>4%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<OnLoad>
							This:SetText[${Script[Tehbot].VariableScope.Mission.Config.PrimaryName}]
						</OnLoad>
						<OnChange>
							Script[Tehbot].VariableScope.Mission.Config:SetPrimaryName[${This.Text}]
						</OnChange>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Storage/Misc@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This is the name of the pilot the Sidekick will be assisting. They should be in fleet, and they MUST be on the same machine. If I get unlazy I will make the Fleet part happen automatically. Also, I need to implement the whole thing in the first place."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Storage/Misc@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Textentry>
					
					<Text name='MunitionStorageTitle'>
						<X>36%</X>
						<Y>60%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Alignment>Center</Alignment>
						<Text>Ammo/Drone Storage</Text>
					</Text>
					<listbox Name="MunitionStorage">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>36%</X>
						<Y>64%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Items>
							<Item>Personal Hangar</Item>
							<Item>Corporation Hangar</Item>
						</Items>
						<OnLoad>
							This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.MunitionStorage}]:Select
						</OnLoad>
						<OnSelect>
							Script[Tehbot].VariableScope.Mission.Config:SetMunitionStorage[${This.SelectedItem.Text}]
							switch ${This.SelectedItem.Text}
							{
								case Corporation Hangar
									UIElement[MunitionStorageFolderTitle@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Show
									UIElement[MunitionStorageFolder@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Show
									break
								case Personal Hangar
									UIElement[MunitionStorageFolderTitle@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Hide
									UIElement[MunitionStorageFolder@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Hide
									break
							}
						</OnSelect>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Storage/Misc@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["Use this field to configure where you would like Tehbot to unload salvage loot."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Storage/Misc@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</listbox>

					<Text name='MunitionStorageFolderTitle'>
						<X>69%</X>
						<Y>60%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Alignment>Center</Alignment>
						<Text>Corporation Folder</Text>
						<OnLoad>
							switch ${Script[Tehbot].VariableScope.Mission.Config.MunitionStorage}
							{
								case Corporation Hangar
									This:Show
									break
								default
									This:Hide
									break
							}
						</OnLoad>
					</Text>
					<listbox Name="MunitionStorageFolder">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>69%</X>
						<Y>64%</Y>
						<Width>30%</Width>
						<Height>10%</Height>
						<Items>
							<Item>Folder1</Item>
							<Item>Folder2</Item>
							<Item>Folder3</Item>
							<Item>Folder4</Item>
							<Item>Folder5</Item>
							<Item>Folder6</Item>
							<Item>Folder7</Item>
						</Items>
						<OnLoad>
							switch ${Script[Tehbot].VariableScope.Mission.Config.MunitionStorage}
							{
								case Corporation Hangar
									This:Show
									break
								default
									This:Hide
									break
							}
							This.ItemByText["${Script[Tehbot].VariableScope.Mission.Config.MunitionStorageFolder}"]:Select
						</OnLoad>
						<OnSelect>
							Script[Tehbot].VariableScope.Mission.Config:SetMunitionStorageFolder[${This.SelectedItem.Text}]
						</OnSelect>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Storage/Misc@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This field is used to further configure your dropoff type for types that have additional options, like Corporate Hangars."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Storage/Misc@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</listbox>
					
					<Text name='ExtremelySharedDBPathTitle'>
						<X>1%</X>
						<Y>30%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Alignment>Center</Alignment>
						<Text>Network DB File Path</Text>
					</Text>
					<Textentry Name="ExtremelySharedDBPath">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>40%</X>
						<Y>30%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<OnLoad>
							This:SetText[${Script[Tehbot].VariableScope.Mission.Config.ExtremelySharedDBPath}]
						</OnLoad>
						<OnChange>
							Script[Tehbot].VariableScope.Mission.Config:SetExtremelySharedDBPath[${This.Text}]
						</OnChange>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Storage/Misc@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This will be the Network Path to where your Networked DB will live. //NetworkShare//FolderName// is how it should look."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Storage/Misc@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Textentry>

					<Text name='ExtremelySharedDBPrefixTitle'>
						<X>1%</X>
						<Y>35%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Alignment>Center</Alignment>
						<Text>Network DB Prefix</Text>
					</Text>
					<Textentry Name="ExtremelySharedDBPrefix">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>40%</X>
						<Y>35%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<OnLoad>
							This:SetText[${Script[Tehbot].VariableScope.Mission.Config.ExtremelySharedDBPrefix}]
						</OnLoad>
						<OnChange>
							Script[Tehbot].VariableScope.Mission.Config:SetExtremelySharedDBPrefix[${This.Text}]
						</OnChange>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Storage/Misc@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This will be the prefix to the name of your Networked DB File."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Storage/Misc@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Textentry>
					
					<Text name='InventoryPulseRateModifierTitle'>
						<X>1%</X>
						<Y>40%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Alignment>Center</Alignment>
						<Text>Inventory Pulse Rate Modifier</Text>
					</Text>
					<Textentry Name="InventoryPulseRateModifier">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>41%</X>
						<Y>40%</Y>
						<Width>5%</Width>
						<Height>5%</Height>
						<OnLoad>
							This:SetText[${Script[Tehbot].VariableScope.Mission.Config.InventoryPulseRateModifier}]
						</OnLoad>
						<OnChange>
							Script[Tehbot].VariableScope.Mission.Config:SetInventoryPulseRateModifier[${This.Text}]
						</OnChange>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Storage/Misc@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This will be a multiplier for how long inventory actions are to take. Higher is safer, and slower. Lower is faster and stupid don't go super low. This should be in the form of a number like 1.2 or something."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Storage/Misc@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Textentry>	

					<Text name='WreckBMThresholdTitle'>
						<X>1%</X>
						<Y>45%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Alignment>Center</Alignment>
						<Text>Salvage BM Wreck Threshold</Text>
					</Text>
					<Textentry Name="WreckBMThreshold">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>41%</X>
						<Y>45%</Y>
						<Width>5%</Width>
						<Height>5%</Height>
						<OnLoad>
							This:SetText[${Script[Tehbot].VariableScope.Mission.Config.WreckBMThreshold}]
						</OnLoad>
						<OnChange>
							Script[Tehbot].VariableScope.Mission.Config:SetWreckBMThreshold[${This.Text}]
						</OnChange>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Storage/Misc@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This will be the Salvage BM Threshold. If this many wrecks exist a BM will be placed. This setting will be ignored if there are any Imperial Navy or Caldari State wrecks present (those are money)."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Storage/Misc@MissionTabs@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Textentry>
					
					<Text name='InformationFrameTitle'>
						<X>1%</X>
						<Y>88%</Y>
						<Width>32%</Width>
						<Height>4%</Height>
						<Text>Information</Text>
						<OnLoad>
							This.Font:SetColor[FFFFFF00]
						</OnLoad>
					</Text>
					<Frame name="InformationFrame">
						<X>0%</X>
						<Y>90%</Y>
						<Width>100%</Width>
						<Height>12%</Height>
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<Children>
							<Text name='Information'>
								<X>5%</X>
								<Y>5%</Y>
								<Width>90%</Width>
								<Height>90%</Height>
								<Wrap />
								<VerticalAlignment>Center</VerticalAlignment>
							</Text>
						</Children>
					</Frame>
					</Tab>	
				</Tabs>
				<OnSelect>
					Script[Tehbot].VariableScope.CommonConfig:SetActiveTab[${This.SelectedTab.Name}]
						</OnSelect>
					</TabControl>					
				</Children>
			</Frame>
		</Children>
	</window>

</ISUI>
